syntax = "proto3";

package signal;

import "ResumableUploads.proto";

option java_package        = "org.thoughtcrime.securesms.jobs.protos";
option java_multiple_files = true;


message CallSyncEventJobRecord {

  enum Event {
    UNKNOWN_ACTION = 0;
    ACCEPTED       = 1;
    NOT_ACCEPTED   = 2;
    DELETE         = 3;
    OBSERVED       = 4;
  }

  uint64 recipientId     = 1;
  reserved                 2;
  uint64 callId          = 3;
  uint32 direction       = 4;
  uint32 deprecatedEvent = 5; // Deprecated for callEvent.
  Event  callEvent       = 6;
}

message CallSyncEventJobData {
  repeated CallSyncEventJobRecord records = 1;
}

message CallLinkRefreshSinceTimestampJobData {
  uint64 timestamp = 1;
}

message CallLogEventSendJobData {
  bytes callLogEvent = 1;
}

message CallLinkUpdateSendJobData {
  enum Type {
    UPDATE = 0;
    DELETE = 1;
  }

  string        callLinkRoomId = 1;
  optional Type type           = 2;
}

message AttachmentUploadJobData {
  uint64 attachmentId = 1;
  reserved /*attachmentUniqueId*/ 2;
  optional ResumableUpload uploadSpec = 3;
}

message PreKeysSyncJobData {
  bool forceRefreshRequested = 1;
}

message ArchiveAttachmentJobData {
  uint64 attachmentId = 1;
}

message ArchiveAttachmentBackfillJobData {
  optional uint64 attachmentId = 1;
  ResumableUpload uploadSpec = 2;
  optional uint32 count = 3;
  optional uint32 totalCount = 4;
}

message ArchiveThumbnailUploadJobData {
  uint64 attachmentId = 1;
}

message InAppPaymentRedemptionJobData {
  oneof id {
    uint64 inAppPaymentId = 1;
    uint64 giftMessageId  = 2;
  }

  bool makePrimary = 3;
}

message DeleteSyncJobData {
  message AddressableMessage {
    uint64 threadRecipientId = 1;
    uint64 sentTimestamp = 2;
    uint64 authorRecipientId = 3;
  }

  message AttachmentDelete {
    AddressableMessage targetMessage = 1;
    optional bytes uuid = 2;
    optional bytes digest = 3;
    optional bytes plaintextHash = 4;
  }

  message ThreadDelete {
    uint64 threadRecipientId = 1;
    repeated AddressableMessage messages = 2;
    bool isFullDelete = 3;
    repeated AddressableMessage nonExpiringMessages = 4;
  }

  repeated AddressableMessage messageDeletes = 1;
  repeated ThreadDelete threadDeletes = 2;
  repeated ThreadDelete localOnlyThreadDeletes = 3;
  repeated AttachmentDelete attachmentDeletes = 4;
}

message Svr3MirrorJobData {
  optional string serializedChangeSession = 1;
}

message GroupCallPeekJobData {
  uint64 groupRecipientId  = 1;
  uint64 senderRecipientId = 2;
  uint64 serverTimestamp   = 3;
}