# generated by datamodel-codegen:
#   filename:  signal-server-openapi.yaml
#   timestamp: 2024-08-19T17:33:55+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Dict, List, Optional, Union


@dataclass
class ServiceIdentifier:
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """


@dataclass
class UsernameHashResponse:
    usernameHash: Optional[str] = None
    """
    The hash of the confirmed username, as supplied in the request
    """
    usernameLinkHandle: Optional[str] = None
    """
    A handle that can be included in username links to retrieve the stored encrypted username
    """


@dataclass
class ConfirmUsernameHashRequest:
    zkProof: str
    usernameHash: Optional[str] = None
    encryptedUsername: Optional[str] = None
    """
    The url-safe base64-encoded encrypted username to be stored for username links
    """


@dataclass
class AccountIdentityResponse:
    uuid: Optional[str] = None
    """
    the account identifier for this account
    """
    number: Optional[str] = None
    """
    the phone number associated with this account
    """
    pni: Optional[str] = None
    """
    the account identifier for this account's phone-number identity
    """
    usernameHash: Optional[str] = None
    """
    a hash of this account's username, if set
    """
    storageCapable: Optional[bool] = None
    """
    whether any of this account's devices support storage
    """


@dataclass
class TurnToken:
    username: Optional[str] = None
    password: Optional[str] = None
    urls: Optional[List[str]] = None
    urlsWithIps: Optional[List[str]] = None
    hostname: Optional[str] = None


@dataclass
class AccountIdentifierResponse:
    uuid: str
    """
    An identifier for an account based on the account's ACI
    """


@dataclass
class EncryptedUsername:
    usernameLinkEncryptedValue: str
    """
    the URL-safe base64 encoding of the encrypted username
    """
    keepLinkHandle: Optional[bool] = None
    """
    if set and the account already has an encrypted-username link handle, reuse the same link handle rather than generating a new one. The response will still have the link handle.
    """


@dataclass
class ReserveUsernameHashResponse:
    usernameHash: Optional[str] = None


@dataclass
class ReserveUsernameHashRequest:
    usernameHashes: List[str]


@dataclass
class DeviceCapabilities:
    storage: Optional[bool] = None
    transfer: Optional[bool] = None
    paymentActivation: Optional[bool] = None
    deleteSync: Optional[bool] = None


@dataclass
class ApnRegistrationId:
    """
    An APNs token set for the account's primary device. If provided, the account's primary
    device will be notified of new messages via push notifications to the given token.
    Callers must provide exactly one of an APNs token set, an FCM token, or an
    `AccountAttributes` entity with `fetchesMessages` set to `true`.

    """

    apnRegistrationId: str
    voipRegistrationId: Optional[str] = None


@dataclass
class GcmRegistrationId:
    """
    An FCM/GCM token for the account's primary device. If provided, the account's primary
    device will be notified of new messages via push notifications to the given token.
    Callers must provide exactly one of an APNs token set, an FCM token, or an
    `AccountAttributes` entity with `fetchesMessages` set to `true`.

    """

    gcmRegistrationId: str


@dataclass
class DeviceName:
    deviceName: str


@dataclass
class RegistrationLock:
    registrationLock: str


@dataclass
class UsernameLinkHandle:
    usernameLinkHandle: str
    """
    A handle that can be included in username links to retrieve the stored encrypted username
    """


@dataclass
class MismatchedDevices:
    missingDevices: Optional[List[str]] = None
    """
    Devices present on the account but absent in the request
    """
    extraDevices: Optional[List[str]] = None
    """
    Devices absent on the request but present in the account
    """


@dataclass
class StaleDevices:
    staleDevices: Optional[List[str]] = None
    """
    Devices that are no longer active
    """


@dataclass
class ExternalServiceCredentials:
    username: Optional[str] = None
    password: Optional[str] = None


@dataclass
class Svr3Credentials:
    """
    A time limited external service credential that can be used to authenticate and restore from SVR3.

    """

    username: Optional[str] = None
    """
    The credential username
    """
    password: Optional[str] = None
    """
    The credential password
    """
    shareSet: Optional[str] = None
    """
    If present, a shareSet previously stored for this account via /v3/backups/shareSet. Required to restore a value
    from SVR3. Encoded in standard un-padded base64.

    """


@dataclass
class ECPublicKey:
    type: Optional[int] = None
    publicKeyBytes: Optional[str] = None


@dataclass
class ECSignedPreKey:
    """
    A signed EC pre-key to be associated with this account's PNI.

    """

    keyId: Optional[int] = None
    """
    An arbitrary ID for this key, which will be provided by peers using this key to encrypt messages so the private key can be looked up.
    Should not be zero. Should be less than 2^24.

    """
    publicKey: Optional[str] = None
    """
    The public key, serialized in libsignal's elliptic-curve public key format and then base64-encoded.

    """
    signature: Optional[str] = None
    """
    The signature of the serialized `publicKey` with the account (or phone-number identity)'s identity key, base64-encoded.

    """


@dataclass
class IdentityKey:
    """
    The PNI-associated identity key for the account, encoded as a base64 string.

    """

    publicKey: Optional[ECPublicKey] = None
    fingerprint: Optional[str] = None


@dataclass
class IncomingMessage:
    type: Optional[int] = None
    destinationDeviceId: Optional[str] = None
    destinationRegistrationId: Optional[int] = None
    content: Optional[str] = None


@dataclass
class KEMSignedPreKey:
    """
    A signed Kyber-1024 "last resort" pre-key to be associated with this account's PNI.

    """

    keyId: Optional[int] = None
    """
    An arbitrary ID for this key, which will be provided by peers using this key to encrypt messages so the private key can be looked up.
    Should not be zero. Should be less than 2^24. The owner of this key must be able to determine from the key ID whether this represents
    a single-use or last-resort key, but another party should *not* be able to tell.

    """
    publicKey: Optional[str] = None
    """
    The public key, serialized in libsignal's Kyber1024 public key format and then base64-encoded.

    """
    signature: Optional[str] = None
    """
    The signature of the serialized `publicKey` with the account (or phone-number identity)'s identity key, base64-encoded.

    """


@dataclass
class PhoneNumberIdentityKeyDistributionRequest:
    pniIdentityKey: IdentityKey
    deviceMessages: List[IncomingMessage]
    """
    A list of synchronization messages to send to companion devices to supply the private keys
    associated with the new identity key and their new prekeys.
    Exactly one message must be supplied for each enabled device other than the sending (primary) device.

    """
    devicePniSignedPrekeys: Dict[str, ECSignedPreKey]
    """
    A new signed elliptic-curve prekey for each enabled device on the account, including this one.
    Each must be accompanied by a valid signature from the new identity key in this request.
    """
    pniRegistrationIds: Dict[str, int]
    """
    The new registration ID to use for the phone-number identity of each device, including this one.
    """
    devicePniPqLastResortPrekeys: Optional[Dict[str, KEMSignedPreKey]] = None
    """
    A new signed post-quantum last-resort prekey for each enabled device on the account, including this one.
    May be absent, in which case the last resort PQ prekeys for each device will be deleted if any had been stored.
    If present, must contain one prekey per enabled device including this one.
    Prekeys for devices that did not previously have any post-quantum prekeys stored will be silently dropped.
    Each must be accompanied by a valid signature from the new identity key in this request.
    """


@dataclass
class BadgeDataReport:
    id: Optional[str] = None
    expiration: Optional[str] = None
    visible: Optional[bool] = None


@dataclass
class DeviceDataReport:
    id: Optional[str] = None
    lastSeen: Optional[str] = None
    created: Optional[str] = None
    userAgent: Optional[str] = None


@dataclass
class PhoneNumberDiscoverabilityRequest:
    discoverableByPhoneNumber: bool


@dataclass
class UploadDescriptorResponse:
    cdn: Optional[int] = None
    """
    Indicates the CDN type. 3 indicates resumable uploads using TUS
    """
    key: Optional[str] = None
    """
    The location within the specified cdn where the finished upload can be found.
    """
    headers: Optional[Dict[str, str]] = None
    """
    A map of headers to include with all upload requests. Potentially contains time-limited upload credentials
    """
    signedUploadLocation: Optional[str] = None
    """
    The URL to upload to with the appropriate protocol
    """


@dataclass
class BackupInfoResponse:
    cdn: Optional[int] = None
    """
    The CDN type where the message backup is stored. Media may be stored elsewhere.
    """
    backupDir: Optional[str] = None
    """
    The base directory of your backup data on the cdn. The message backup can be found in the returned cdn at
    /backupDir/backupName and stored media can be found at /backupDir/mediaDir/mediaId

    """
    mediaDir: Optional[str] = None
    """
    The prefix path component for media objects on a cdn. Stored media for mediaId can be found at
    /backupDir/mediaDir/mediaId.

    """
    backupName: Optional[str] = None
    """
    The name of the most recent message backup on the cdn. The backup is at /backupDir/backupName
    """
    usedSpace: Optional[int] = None
    """
    The amount of space used to store media
    """


@dataclass
class Entry:
    """
    Detailed outcome information for each copy request in the batch
    """

    mediaId: str
    """
    The mediaId of the object, encoded in URL-safe padded base64
    """
    status: Optional[int] = None
    """
    The outcome of the copy attempt.
    A 200 indicates the object was successfully copied.
    A 400 indicates an invalid argument in the request
    A 410 indicates that the source object was not found
    A 413 indicates that the media quota was exhausted

    """
    failureReason: Optional[str] = None
    """
    On a copy failure, a detailed failure reason
    """
    cdn: Optional[int] = None
    """
    The backup cdn where this media object is stored
    """


@dataclass
class RemoteAttachment:
    """
    The object on the attachment CDN to copy
    """

    cdn: int
    """
    The attachment cdn
    """
    key: str
    """
    The attachment key
    """


@dataclass
class CopyMediaResponse:
    cdn: int
    """
    The backup cdn where this media object is stored
    """


@dataclass
class MediaToDelete:
    cdn: int
    """
    The backup cdn where this media object is stored
    """
    mediaId: str
    """
    The mediaId of the object in URL-safe base64
    """


@dataclass
class BackupAuthCredential:
    """
    A list of BackupAuthCredentials and their validity periods
    """

    credential: Optional[str] = None
    """
    A BackupAuthCredential, encoded in standard padded base64
    """
    redemptionTime: Optional[int] = None
    """
    The day on which this credential is valid. Seconds since epoch truncated to day boundary
    """


@dataclass
class BackupAuthCredentialsResponse:
    credentials: Optional[List[BackupAuthCredential]] = None
    """
    A list of BackupAuthCredentials and their validity periods
    """


@dataclass
class StoredMediaObject:
    """
    A page of media objects stored for this backup ID
    """

    cdn: int
    """
    The backup cdn where this media object is stored
    """
    mediaId: str
    """
    The mediaId of the object in URL-safe base64
    """
    objectLength: int
    """
    The length of the object in bytes
    """


@dataclass
class ReadAuthResponse:
    headers: Optional[Dict[str, str]] = None
    """
    Auth headers to include with cdn read requests
    """


@dataclass
class RedeemBackupReceiptRequest:
    receiptCredentialPresentation: str
    """
    Presentation of a ZK receipt encoded in standard padded base64
    """


@dataclass
class SetBackupIdRequest:
    backupAuthCredentialRequest: str
    """
    A BackupAuthCredentialRequest containing a blinded encrypted backup-id, encoded in standard padded base64

    """


@dataclass
class SetPublicKeyRequest:
    publicKey: Optional[str] = None
    """
    The public key, serialized in libsignal's elliptic-curve public key format and then encoded as a standard (i.e.
    not URL-safe), padded, base64-encoded string.

    """


@dataclass
class AttachmentDescriptorV2:
    attachmentId: Optional[int] = None
    key: Optional[str] = None
    credential: Optional[str] = None
    acl: Optional[str] = None
    algorithm: Optional[str] = None
    date: Optional[str] = None
    policy: Optional[str] = None
    signature: Optional[str] = None
    attachmentIdString: Optional[str] = None


@dataclass
class AttachmentDescriptorV3:
    cdn: Optional[int] = None
    """
    Indicates the CDN type. 2 in the v3 API, 2 or 3 in the v4 API.
    2 indicates resumable uploads using GCS,
    3 indicates resumable uploads using TUS

    """
    key: Optional[str] = None
    """
    The location within the specified cdn where the finished upload can be found
    """
    headers: Optional[Dict[str, str]] = None
    """
    A map of headers to include with all upload requests. Potentially contains time-limited upload credentials
    """
    signedUploadLocation: Optional[str] = None
    """
    The URL to upload to with the appropriate protocol
    """


@dataclass
class CreateCallLinkCredential:
    credential: Optional[str] = None
    redemptionTime: Optional[int] = None


@dataclass
class GetCreateCallLinkCredentialsRequest:
    createCallLinkCredentialRequest: str


@dataclass
class DeliveryCertificate:
    certificate: Optional[str] = None


@dataclass
class CallLinkAuthCredential:
    credential: Optional[str] = None
    redemptionTime: Optional[int] = None


@dataclass
class GroupCredential:
    credential: Optional[str] = None
    redemptionTime: Optional[int] = None


@dataclass
class GroupCredentials:
    credentials: Optional[List[GroupCredential]] = None
    callLinkAuthCredentials: Optional[List[CallLinkAuthCredential]] = None
    pni: Optional[str] = None


@dataclass
class AnswerChallengeRequest:
    type: str


@dataclass
class VerificationCode:
    verificationCode: Optional[str] = None


@dataclass
class DeviceInfo:
    id: Optional[int] = None
    name: Optional[str] = None
    lastSeen: Optional[int] = None
    created: Optional[int] = None


@dataclass
class DeviceInfoList:
    devices: Optional[List[DeviceInfo]] = None


@dataclass
class DeviceResponse:
    uuid: Optional[str] = None
    pni: Optional[str] = None
    deviceId: Optional[str] = None


@dataclass
class BasicAuthorizationHeader:
    username: Optional[str] = None
    deviceId: Optional[int] = None
    password: Optional[str] = None


@dataclass
class DeviceActivationRequest:
    aciSignedPreKey: ECSignedPreKey
    pniSignedPreKey: ECSignedPreKey
    aciPqLastResortPreKey: KEMSignedPreKey
    pniPqLastResortPreKey: KEMSignedPreKey
    apnToken: Optional[ApnRegistrationId] = None
    gcmToken: Optional[GcmRegistrationId] = None


@dataclass
class RedeemReceiptRequest:
    receiptCredentialPresentation: str
    visible: Optional[bool] = None
    primary: Optional[bool] = None


@dataclass
class WebSocketClient:
    userAgent: Optional[str] = None
    open: Optional[bool] = None
    createdTimestamp: Optional[int] = None


@dataclass
class WebSocketSessionContext:
    authenticated: Optional[Dict[str, Any]] = None
    client: Optional[WebSocketClient] = None


@dataclass
class ByteString:
    empty: Optional[bool] = None
    validUtf8: Optional[bool] = None


@dataclass
class ReservedNameList:
    empty: Optional[bool] = None
    first: Optional[str] = None
    last: Optional[str] = None


class Edition(Enum):
    EDITION_UNKNOWN = "EDITION_UNKNOWN"
    EDITION_PROTO2 = "EDITION_PROTO2"
    EDITION_PROTO3 = "EDITION_PROTO3"
    EDITION_2023 = "EDITION_2023"
    EDITION_1_TEST_ONLY = "EDITION_1_TEST_ONLY"
    EDITION_2_TEST_ONLY = "EDITION_2_TEST_ONLY"
    EDITION_99997_TEST_ONLY = "EDITION_99997_TEST_ONLY"
    EDITION_99998_TEST_ONLY = "EDITION_99998_TEST_ONLY"
    EDITION_99999_TEST_ONLY = "EDITION_99999_TEST_ONLY"


class Verification(Enum):
    DECLARATION = "DECLARATION"
    UNVERIFIED = "UNVERIFIED"


class EnumType(Enum):
    ENUM_TYPE_UNKNOWN = "ENUM_TYPE_UNKNOWN"
    OPEN = "OPEN"
    CLOSED = "CLOSED"


class FieldPresence(Enum):
    FIELD_PRESENCE_UNKNOWN = "FIELD_PRESENCE_UNKNOWN"
    EXPLICIT = "EXPLICIT"
    IMPLICIT = "IMPLICIT"
    LEGACY_REQUIRED = "LEGACY_REQUIRED"


class RepeatedFieldEncoding(Enum):
    REPEATED_FIELD_ENCODING_UNKNOWN = "REPEATED_FIELD_ENCODING_UNKNOWN"
    PACKED = "PACKED"
    EXPANDED = "EXPANDED"


class MessageEncoding(Enum):
    MESSAGE_ENCODING_UNKNOWN = "MESSAGE_ENCODING_UNKNOWN"
    LENGTH_PREFIXED = "LENGTH_PREFIXED"
    DELIMITED = "DELIMITED"


class JsonFormat(Enum):
    JSON_FORMAT_UNKNOWN = "JSON_FORMAT_UNKNOWN"
    ALLOW = "ALLOW"
    LEGACY_BEST_EFFORT = "LEGACY_BEST_EFFORT"


class Utf8Validation(Enum):
    UTF8_VALIDATION_UNKNOWN = "UTF8_VALIDATION_UNKNOWN"
    NONE = "NONE"
    VERIFY = "VERIFY"


class Type(Enum):
    DOUBLE = "DOUBLE"
    FLOAT = "FLOAT"
    INT64 = "INT64"
    UINT64 = "UINT64"
    INT32 = "INT32"
    FIXED64 = "FIXED64"
    FIXED32 = "FIXED32"
    BOOL = "BOOL"
    STRING = "STRING"
    GROUP = "GROUP"
    MESSAGE = "MESSAGE"
    BYTES = "BYTES"
    UINT32 = "UINT32"
    ENUM = "ENUM"
    SFIXED32 = "SFIXED32"
    SFIXED64 = "SFIXED64"
    SINT32 = "SINT32"
    SINT64 = "SINT64"


class JavaType(Enum):
    INT = "INT"
    LONG = "LONG"
    FLOAT = "FLOAT"
    DOUBLE = "DOUBLE"
    BOOLEAN = "BOOLEAN"
    STRING = "STRING"
    BYTE_STRING = "BYTE_STRING"
    ENUM = "ENUM"
    MESSAGE = "MESSAGE"


class LiteJavaType(Enum):
    INT = "INT"
    LONG = "LONG"
    FLOAT = "FLOAT"
    DOUBLE = "DOUBLE"
    BOOLEAN = "BOOLEAN"
    STRING = "STRING"
    BYTE_STRING = "BYTE_STRING"
    ENUM = "ENUM"
    MESSAGE = "MESSAGE"


class LiteType(Enum):
    DOUBLE = "DOUBLE"
    FLOAT = "FLOAT"
    INT64 = "INT64"
    UINT64 = "UINT64"
    INT32 = "INT32"
    FIXED64 = "FIXED64"
    FIXED32 = "FIXED32"
    BOOL = "BOOL"
    STRING = "STRING"
    GROUP = "GROUP"
    MESSAGE = "MESSAGE"
    BYTES = "BYTES"
    UINT32 = "UINT32"
    ENUM = "ENUM"
    SFIXED32 = "SFIXED32"
    SFIXED64 = "SFIXED64"
    SINT32 = "SINT32"
    SINT64 = "SINT64"


class Label(Enum):
    LABEL_OPTIONAL = "LABEL_OPTIONAL"
    LABEL_REPEATED = "LABEL_REPEATED"
    LABEL_REQUIRED = "LABEL_REQUIRED"


class Type1(Enum):
    TYPE_DOUBLE = "TYPE_DOUBLE"
    TYPE_FLOAT = "TYPE_FLOAT"
    TYPE_INT64 = "TYPE_INT64"
    TYPE_UINT64 = "TYPE_UINT64"
    TYPE_INT32 = "TYPE_INT32"
    TYPE_FIXED64 = "TYPE_FIXED64"
    TYPE_FIXED32 = "TYPE_FIXED32"
    TYPE_BOOL = "TYPE_BOOL"
    TYPE_STRING = "TYPE_STRING"
    TYPE_GROUP = "TYPE_GROUP"
    TYPE_MESSAGE = "TYPE_MESSAGE"
    TYPE_BYTES = "TYPE_BYTES"
    TYPE_UINT32 = "TYPE_UINT32"
    TYPE_ENUM = "TYPE_ENUM"
    TYPE_SFIXED32 = "TYPE_SFIXED32"
    TYPE_SFIXED64 = "TYPE_SFIXED64"
    TYPE_SINT32 = "TYPE_SINT32"
    TYPE_SINT64 = "TYPE_SINT64"


class Retention(Enum):
    RETENTION_UNKNOWN = "RETENTION_UNKNOWN"
    RETENTION_RUNTIME = "RETENTION_RUNTIME"
    RETENTION_SOURCE = "RETENTION_SOURCE"


class Ctype(Enum):
    STRING = "STRING"
    CORD = "CORD"
    STRING_PIECE = "STRING_PIECE"


class Jstype(Enum):
    JS_NORMAL = "JS_NORMAL"
    JS_STRING = "JS_STRING"
    JS_NUMBER = "JS_NUMBER"


class TargetsListEnum(Enum):
    TARGET_TYPE_UNKNOWN = "TARGET_TYPE_UNKNOWN"
    TARGET_TYPE_FILE = "TARGET_TYPE_FILE"
    TARGET_TYPE_EXTENSION_RANGE = "TARGET_TYPE_EXTENSION_RANGE"
    TARGET_TYPE_MESSAGE = "TARGET_TYPE_MESSAGE"
    TARGET_TYPE_FIELD = "TARGET_TYPE_FIELD"
    TARGET_TYPE_ONEOF = "TARGET_TYPE_ONEOF"
    TARGET_TYPE_ENUM = "TARGET_TYPE_ENUM"
    TARGET_TYPE_ENUM_ENTRY = "TARGET_TYPE_ENUM_ENTRY"
    TARGET_TYPE_SERVICE = "TARGET_TYPE_SERVICE"
    TARGET_TYPE_METHOD = "TARGET_TYPE_METHOD"


class Syntax(Enum):
    UNKNOWN = "UNKNOWN"
    PROTO2 = "PROTO2"
    PROTO3 = "PROTO3"
    EDITIONS = "EDITIONS"


@dataclass
class DependencyList:
    empty: Optional[bool] = None
    first: Optional[str] = None
    last: Optional[str] = None


class OptimizeFor(Enum):
    SPEED = "SPEED"
    CODE_SIZE = "CODE_SIZE"
    LITE_RUNTIME = "LITE_RUNTIME"


@dataclass
class LeadingDetachedCommentsList:
    empty: Optional[bool] = None
    first: Optional[str] = None
    last: Optional[str] = None


class IdempotencyLevel(Enum):
    IDEMPOTENCY_UNKNOWN = "IDEMPOTENCY_UNKNOWN"
    NO_SIDE_EFFECTS = "NO_SIDE_EFFECTS"
    IDEMPOTENT = "IDEMPOTENT"


@dataclass
class Parser:
    pass


@dataclass
class ParserAuditorTreeHead:
    pass


@dataclass
class ParserDeclaration:
    pass


@dataclass
class ParserDescriptorProto:
    pass


@dataclass
class ParserEditionDefault:
    pass


@dataclass
class ParserEnumDescriptorProto:
    pass


@dataclass
class ParserEnumOptions:
    pass


@dataclass
class ParserEnumReservedRange:
    pass


@dataclass
class ParserEnumValueDescriptorProto:
    pass


@dataclass
class ParserEnumValueOptions:
    pass


@dataclass
class ParserExtensionRange:
    pass


@dataclass
class ParserExtensionRangeOptions:
    pass


@dataclass
class ParserFeatureSet:
    pass


@dataclass
class ParserFieldDescriptorProto:
    pass


@dataclass
class ParserFieldOptions:
    pass


@dataclass
class ParserFileDescriptorProto:
    pass


@dataclass
class ParserFileOptions:
    pass


@dataclass
class ParserFullTreeHead:
    pass


@dataclass
class ParserLocation:
    pass


@dataclass
class ParserMessage:
    pass


@dataclass
class ParserMessageLite:
    pass


@dataclass
class ParserMessageOptions:
    pass


@dataclass
class ParserMethodDescriptorProto:
    pass


@dataclass
class ParserMethodOptions:
    pass


@dataclass
class ParserMonitorProof:
    pass


@dataclass
class ParserNamePart:
    pass


@dataclass
class ParserOneofDescriptorProto:
    pass


@dataclass
class ParserOneofOptions:
    pass


@dataclass
class ParserPrefixSearchResult:
    pass


@dataclass
class ParserProofStep:
    pass


@dataclass
class ParserReservedRange:
    pass


@dataclass
class ParserServiceDescriptorProto:
    pass


@dataclass
class ParserServiceOptions:
    pass


@dataclass
class ParserSourceCodeInfo:
    pass


@dataclass
class ParserTreeHead:
    pass


@dataclass
class ParserUninterpretedOption:
    pass


@dataclass
class ProtocolStringList1:
    empty: Optional[bool] = None
    first: Optional[str] = None
    last: Optional[str] = None


ProtocolStringList = Union[List[str], ProtocolStringList1]


@dataclass
class UnknownFieldSet:
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[UnknownFieldSet] = None
    parserForType: Optional[Parser] = None
    serializedSizeAsMessageSet: Optional[int] = None
    initialized: Optional[bool] = None


@dataclass
class KeyTransparencyMonitorRequest:
    aci: str
    """
    An identifier for an account based on the account's ACI
    """
    aciPositions: List[int]
    """
    A list of log tree positions maintained by the client for the aci search key.
    """
    e164: Optional[str] = None
    """
    The e164-formatted phone number to monitor
    """
    e164Positions: Optional[List[int]] = None
    """
    A list of log tree positions maintained by the client for the e164 search key.
    """
    usernameHash: Optional[str] = None
    """
    The username hash to monitor, encoded in url-safe unpadded base64.
    """
    usernameHashPositions: Optional[List[int]] = None
    """
    A list of log tree positions maintained by the client for the username hash search key.
    """
    lastNonDistinguishedTreeHeadSize: Optional[int] = None
    """
    The tree head size to prove consistency against.
    """
    lastDistinguishedTreeHeadSize: Optional[int] = None
    """
    The distinguished tree head size to prove consistency against.
    """
    usernameHashFieldsValid: Optional[bool] = None
    e164VFieldsValid: Optional[bool] = None


@dataclass
class ParserSearchProof:
    pass


@dataclass
class ParserSearchResponse:
    pass


@dataclass
class ParserUpdateValue:
    pass


@dataclass
class KeyTransparencySearchRequest:
    aci: str
    """
    An identifier for an account based on the account's ACI
    """
    e164: Optional[str] = None
    """
    The e164-formatted phone number to look up
    """
    usernameHash: Optional[str] = None
    """
    The username hash to look up, encoded in web-safe unpadded base64.
    """
    lastTreeHeadSize: Optional[int] = None
    """
    The non-distinguished tree head size to prove consistency against.
    """
    distinguishedTreeHeadSize: Optional[int] = None
    """
    The distinguished tree head size to prove consistency against.
    """


class IdentityType(Enum):
    """
    The identity type for which to check for a shared view of repeated-use keys

    """

    ACI = "ACI"
    PNI = "PNI"


@dataclass
class CheckKeysRequest:
    identityType: IdentityType
    """
    The identity type for which to check for a shared view of repeated-use keys

    """
    digest: str
    """
    A 32-byte digest of the client's repeated-use keys for the given identity type. The digest is calculated as:

    SHA256(identityKeyBytes || signedEcPreKeyId || signedEcPreKeyIdBytes || lastResortKeyId || lastResortKeyBytes)

    …where the elements of the hash are:

    - identityKeyBytes: the serialized form of the client's public identity key as produced by libsignal (i.e. one
      version byte followed by 32 bytes of key material for a total of 33 bytes)
    - signedEcPreKeyId: an 8-byte, big-endian representation of the ID of the client's signed EC pre-key
    - signedEcPreKeyBytes: the serialized form of the client's signed EC pre-key as produced by libsignal (i.e. one
      version byte followed by 32 bytes of key material for a total of 33 bytes)
    - lastResortKeyId: an 8-byte, big-endian representation of the ID of the client's last-resort Kyber key
    - lastResortKeyBytes: the serialized form of the client's last-resort Kyber key as produced by libsignal (i.e.
      one version byte followed by 1568 bytes of key material for a total of 1569 bytes)

    """


@dataclass
class ECPreKey:
    """
    A list of unsigned elliptic-curve prekeys to use for this device. If present and not empty, replaces all stored
    unsigned EC prekeys for the device; if absent or empty, any stored unsigned EC prekeys for the device are not
    deleted.

    """

    keyId: Optional[int] = None
    """
    An arbitrary ID for this key, which will be provided by peers using this key to encrypt messages so the private key can be looked up.
    Should not be zero. Should be less than 2^24.

    """
    publicKey: Optional[str] = None
    """
    The public key, serialized in libsignal's elliptic-curve public key format and then base64-encoded.

    """


@dataclass
class PreKeyResponseItem:
    """
    information about each requested device
    """

    deviceId: Optional[str] = None
    """
    the device ID of the device to which this item pertains
    """
    registrationId: Optional[int] = None
    """
    the registration ID for the device
    """
    signedPreKey: Optional[ECSignedPreKey] = None
    preKey: Optional[ECPreKey] = None
    pqPreKey: Optional[KEMSignedPreKey] = None


@dataclass
class Anonymous:
    accessKey: Optional[str] = None


@dataclass
class GroupSendFullToken:
    expiration: Optional[str] = None
    internalContentsForJNI: Optional[str] = None


@dataclass
class GroupSendTokenHeader:
    token: Optional[GroupSendFullToken] = None


@dataclass
class PreKeyCount:
    count: Optional[int] = None
    """
    the number of stored unsigned elliptic-curve prekeys for this device
    """
    pqCount: Optional[int] = None
    """
    the number of stored one-time post-quantum prekeys for this device
    """


@dataclass
class SetKeysRequest:
    preKeys: Optional[List[ECPreKey]] = None
    """
    A list of unsigned elliptic-curve prekeys to use for this device. If present and not empty, replaces all stored
    unsigned EC prekeys for the device; if absent or empty, any stored unsigned EC prekeys for the device are not
    deleted.

    """
    signedPreKey: Optional[ECSignedPreKey] = None
    pqPreKeys: Optional[List[KEMSignedPreKey]] = None
    """
    A list of signed post-quantum one-time prekeys to use for this device. Each key must have a valid signature from
    the identity key in this request. If present and not empty, replaces all stored unsigned PQ prekeys for the
    device; if absent or empty, any stored unsigned PQ prekeys for the device are not deleted.

    """
    pqLastResortPreKey: Optional[KEMSignedPreKey] = None


@dataclass
class SpamReport:
    token: Optional[str] = None


@dataclass
class AccountMismatchedDevices:
    uuid: Optional[str] = None
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """
    devices: Optional[MismatchedDevices] = None


@dataclass
class AccountStaleDevices:
    uuid: Optional[str] = None
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """
    devices: Optional[StaleDevices] = None


@dataclass
class IncomingMessageList:
    messages: List[IncomingMessage]
    online: Optional[bool] = None
    urgent: Optional[bool] = None
    timestamp: Optional[int] = None


@dataclass
class CombinedUnidentifiedSenderAccessKeys:
    accessKeys: Optional[str] = None


@dataclass
class DevicesAndRegistrationIds:
    parallel: Optional[bool] = None


@dataclass
class Recipient:
    devices: Optional[str] = None
    devicesAndRegistrationIds: Optional[DevicesAndRegistrationIds] = None


@dataclass
class ServiceId:
    rawUUID: Optional[str] = None


class PaymentMethod(Enum):
    UNKNOWN = "UNKNOWN"
    CARD = "CARD"
    PAYPAL = "PAYPAL"
    SEPA_DEBIT = "SEPA_DEBIT"
    IDEAL = "IDEAL"


@dataclass
class ConfirmPayPalBoostRequest:
    currency: str
    payerId: str
    paymentId: str
    paymentToken: str
    amount: Optional[int] = None
    level: Optional[int] = None
    paymentMethod: Optional[PaymentMethod] = None


@dataclass
class CreateBoostRequest:
    currency: str
    amount: Optional[int] = None
    level: Optional[int] = None
    paymentMethod: Optional[PaymentMethod] = None


class Processor(Enum):
    STRIPE = "STRIPE"
    BRAINTREE = "BRAINTREE"


@dataclass
class CreateBoostReceiptCredentialsRequest:
    paymentIntentId: str
    receiptCredentialRequest: str
    processor: Processor


@dataclass
class CreatePayPalBoostRequest:
    currency: str
    returnUrl: str
    cancelUrl: str
    amount: Optional[int] = None
    level: Optional[int] = None
    paymentMethod: Optional[PaymentMethod] = None


@dataclass
class CurrencyConversionEntity:
    base: Optional[str] = None
    conversions: Optional[Dict[str, float]] = None


@dataclass
class CurrencyConversionEntityList:
    currencies: Optional[List[CurrencyConversionEntity]] = None
    timestamp: Optional[int] = None


@dataclass
class BadgeSvg:
    light: str
    dark: str


@dataclass
class UserCapabilities:
    paymentActivation: Optional[bool] = None
    deleteSync: Optional[bool] = None


@dataclass
class Element:
    fingerprint: str
    uuid: Optional[str] = None
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """
    aci: Optional[str] = None
    """
    An identifier for an account based on the account's ACI
    """


@dataclass
class BatchIdentityCheckRequest:
    elements: List[Element]


class AvatarChange(Enum):
    UNCHANGED = "UNCHANGED"
    CLEAR = "CLEAR"
    UPDATE = "UPDATE"


@dataclass
class ProfileKeyCommitment:
    internalContentsForJNI: Optional[str] = None


@dataclass
class ProvisioningMessage:
    body: str


@dataclass
class UserRemoteConfig:
    name: Optional[str] = None
    enabled: Optional[bool] = None
    value: Optional[str] = None


@dataclass
class UserRemoteConfigList:
    config: Optional[List[UserRemoteConfig]] = None
    serverEpochTime: Optional[str] = None


class Matches(Enum):
    """
    A dictionary with the auth check results: `SVR Credentials -> 'match'/'no-match'/'invalid'`
    """

    match = "match"
    no_match = "no-match"
    invalid = "invalid"


@dataclass
class AuthCheckResponseV2:
    matches: Dict[str, Matches]
    """
    A dictionary with the auth check results: `SVR Credentials -> 'match'/'no-match'/'invalid'`
    """


@dataclass
class AuthCheckRequest:
    number: str
    """
    The e164-formatted phone number.
    """
    tokens: List[str]
    """
    A list of SVR tokens, previously retrieved from `backup/auth`. Tokens should be the
    of the form "username:password". May contain at most 10 tokens.
    """


class Status(Enum):
    """
    The status of the credential. Either match, no-match, or invalid
    """

    match = "match"
    no_match = "no-match"
    invalid = "invalid"


@dataclass
class Result:
    """
    A dictionary with the auth check results, keyed by the token corresponding token provided in the request.

    """

    status: Optional[Status] = None
    """
    The status of the credential. Either match, no-match, or invalid
    """
    shareSet: Optional[str] = None
    """
    If the credential was a match, the stored shareSet that can be used to restore a value from SVR. Encoded in
    standard un-padded base64.

    """


@dataclass
class SetShareSetRequest:
    shareSet: str
    """
    A share-set generated by a client after storing a value in SVR3, serialized in un-padded standard base64

    """


@dataclass
class StickerPackFormUploadItem:
    id: Optional[int] = None
    key: Optional[str] = None
    credential: Optional[str] = None
    acl: Optional[str] = None
    algorithm: Optional[str] = None
    date: Optional[str] = None
    policy: Optional[str] = None
    signature: Optional[str] = None


@dataclass
class CreatePayPalBillingAgreementRequest:
    returnUrl: str
    cancelUrl: str


@dataclass
class GetReceiptCredentialsRequest:
    receiptCredentialRequest: str


@dataclass
class BackupLevelConfiguration:
    """
    Configuration for a backup level - use to present appropriate client interfaces
    """

    storageAllowanceBytes: Optional[int] = None
    """
    The amount of media storage in bytes that a paying subscriber may store
    """


@dataclass
class CurrencyConfiguration:
    """
    Configuration for a currency - use to present appropriate client interfaces
    """

    minimum: Optional[float] = None
    """
    The minimum amount that may be submitted for a one-time donation in the currency
    """
    oneTime: Optional[Dict[str, List[float]]] = None
    """
    A map of numeric one-time donation level IDs to the list of default amounts to be presented
    """
    subscription: Optional[Dict[str, float]] = None
    """
    A map of numeric subscription level IDs to the amount charged for that level
    """
    backupSubscription: Optional[Dict[str, float]] = None
    """
    A map of numeric backup level IDs to the amount charged for that level
    """
    supportedPaymentMethods: Optional[List[str]] = None
    """
    The payment methods that support the given currency
    """


class RequestedInformation(Enum):
    pushChallenge = "pushChallenge"
    captcha = "captcha"


@dataclass
class VerificationSessionResponse:
    id: Optional[str] = None
    nextSms: Optional[int] = None
    nextCall: Optional[int] = None
    nextVerificationAttempt: Optional[int] = None
    allowedToRequestCode: Optional[bool] = None
    requestedInformation: Optional[List[RequestedInformation]] = None
    verified: Optional[bool] = None


class PushTokenType(Enum):
    apn = "apn"
    fcm = "fcm"


@dataclass
class CreateVerificationSessionRequest:
    number: str
    pushToken: Optional[str] = None
    pushTokenType: Optional[PushTokenType] = None
    pushChallenge: Optional[str] = None
    captcha: Optional[str] = None
    mcc: Optional[str] = None
    mnc: Optional[str] = None


@dataclass
class UpdateVerificationSessionRequest:
    pushToken: Optional[str] = None
    pushTokenType: Optional[PushTokenType] = None
    pushChallenge: Optional[str] = None
    captcha: Optional[str] = None
    mcc: Optional[str] = None
    mnc: Optional[str] = None


class Transport(Enum):
    sms = "sms"
    voice = "voice"


@dataclass
class VerificationCodeRequest:
    transport: Transport
    client: str


@dataclass
class SubmitVerificationCodeRequest:
    code: str


@dataclass
class AciServiceIdentifier(ServiceIdentifier):
    """
    An identifier for an account based on the account's ACI
    """


@dataclass
class PniServiceIdentifier(ServiceIdentifier):
    """
    An identifier for an account based on the account's phone number identifier (PNI)
    """


@dataclass
class AccountAttributes:
    fetchesMessages: Optional[bool] = None
    registrationId: Optional[int] = None
    name: Optional[str] = None
    registrationLock: Optional[str] = None
    unidentifiedAccessKey: Optional[str] = None
    unrestrictedUnidentifiedAccess: Optional[bool] = None
    capabilities: Optional[DeviceCapabilities] = None
    discoverableByPhoneNumber: Optional[bool] = None
    recoveryPassword: Optional[str] = None
    eachRegistrationIdValid: Optional[bool] = None
    pniRegistrationId: Optional[int] = None


@dataclass
class RegistrationLockFailure:
    """
    Information about the current Registration lock and SVR credentials. With a correct PIN, the credentials can
    be used to recover the secret used to derive the registration lock password.

    """

    timeRemaining: Optional[int] = None
    """
    Time remaining in milliseconds before the existing registration lock expires
    """
    svr2Credentials: Optional[ExternalServiceCredentials] = None
    svr3Credentials: Optional[Svr3Credentials] = None


@dataclass
class ChangeNumberRequest:
    number: str
    """
    the new phone number for this account
    """
    pniIdentityKey: IdentityKey
    deviceMessages: List[IncomingMessage]
    """
    A list of synchronization messages to send to companion devices to supply the private keysManager
    associated with the new identity key and their new prekeys.
    Exactly one message must be supplied for each enabled device other than the sending (primary) device.
    """
    devicePniSignedPrekeys: Dict[str, ECSignedPreKey]
    """
    A new signed elliptic-curve prekey for each enabled device on the account, including this one.
    Each must be accompanied by a valid signature from the new identity key in this request.
    """
    pniRegistrationIds: Dict[str, int]
    """
    the new phone-number-identity registration ID for each enabled device on the account, including this one
    """
    sessionId: Optional[str] = None
    """
    A session ID from registration service, if using session id to authenticate this request.
    Must not be combined with `recoveryPassword`.
    """
    recoveryPassword: Optional[str] = None
    """
    The base64-encoded recovery password for the new phone number, if using a recovery password to authenticate this request.
    Must not be combined with `sessionId`.
    """
    devicePniPqLastResortPrekeys: Optional[Dict[str, KEMSignedPreKey]] = None
    """
    A new signed post-quantum last-resort prekey for each enabled device on the account, including this one.
    May be absent, in which case the last resort PQ prekeys for each device will be deleted if any had been stored.
    If present, must contain one prekey per enabled device including this one.
    Prekeys for devices that did not previously have any post-quantum prekeys stored will be silently dropped.
    Each must be accompanied by a valid signature from the new identity key in this request.
    """
    eachPniRegistrationIdValid: Optional[bool] = None
    valid: Optional[bool] = None
    reglock: Optional[str] = None
    """
    the registration lock password for the new phone number, if necessary
    """


@dataclass
class AccountDataReport:
    phoneNumber: Optional[str] = None
    badges: Optional[List[BadgeDataReport]] = None
    allowSealedSenderFromAnyone: Optional[bool] = None
    findAccountByPhoneNumber: Optional[bool] = None


@dataclass
class CopyMediaBatchResponse:
    responses: Optional[List[Entry]] = None
    """
    Detailed outcome information for each copy request in the batch
    """


@dataclass
class CopyMediaRequest:
    sourceAttachment: RemoteAttachment
    objectLength: int
    """
    The length of the source attachment before the encryption applied by the copy operation
    """
    mediaId: str
    """
    mediaId to copy on to the backup CDN, encoded in URL-safe padded base64
    """
    hmacKey: str
    """
    A 32-byte key for the MAC, encoded in standard padded base64
    """
    encryptionKey: str
    """
    A 32-byte encryption key for AES, encoded in standard padded base64
    """
    iv: str
    """
    A 16-byte IV for AES, encoded in standard padded base64
    """


@dataclass
class DeleteMedia:
    mediaToDelete: Optional[List[MediaToDelete]] = None


@dataclass
class ListResponse:
    storedMediaObjects: Optional[List[StoredMediaObject]] = None
    """
    A page of media objects stored for this backup ID
    """
    backupDir: Optional[str] = None
    """
    The base directory of your backup data on the cdn. The stored media can be found at /backupDir/mediaDir/mediaId

    """
    mediaDir: Optional[str] = None
    """
    The prefix path component for the media objects. The stored media for mediaId can be found at /backupDir/mediaDir/mediaId.

    """
    cursor: Optional[str] = None
    """
    If set, the cursor value to pass to the next list request to continue listing. If absent, all objects have been listed
    """


@dataclass
class AnswerPushChallengeRequest(AnswerChallengeRequest):
    challenge: str
    """
    A token provided to the client via a push payload
    """


@dataclass
class AnswerCaptchaChallengeRequest(AnswerChallengeRequest):
    token: str
    """
    The value of the token field from the server's 428 response
    """
    captcha: str
    """
    A string representing a solved captcha
    """


@dataclass
class LinkDeviceRequest:
    verificationCode: str
    """
    The verification code associated with this device. Must match the verification code
    provided by the server when provisioning this device.

    """
    aciSignedPreKey: ECSignedPreKey
    pniSignedPreKey: ECSignedPreKey
    aciPqLastResortPreKey: KEMSignedPreKey
    pniPqLastResortPreKey: KEMSignedPreKey
    accountAttributes: Optional[AccountAttributes] = None
    apnToken: Optional[ApnRegistrationId] = None
    gcmToken: Optional[GcmRegistrationId] = None


@dataclass
class MessageLite:
    serializedSize: Optional[int] = None
    parserForType: Optional[ParserMessageLite] = None
    defaultInstanceForType: Optional[MessageLite] = None
    initialized: Optional[bool] = None


@dataclass
class PreKeyResponse:
    identityKey: Optional[IdentityKey] = None
    devices: Optional[List[PreKeyResponseItem]] = None
    """
    information about each requested device
    """


@dataclass
class SealedSenderMultiRecipientMessage:
    recipients: Optional[Dict[str, Recipient]] = None
    excludedRecipients: Optional[List[ServiceId]] = None


@dataclass
class Badge:
    """
    The displayable badge associated with the level
    """

    id: Optional[str] = None
    category: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    sprites6: Optional[List[str]] = None
    svg: Optional[str] = None
    svgs: Optional[List[BadgeSvg]] = None
    imageUrl: Optional[str] = None


@dataclass
class BaseProfileResponse:
    identityKey: Optional[IdentityKey] = None
    unidentifiedAccess: Optional[str] = None
    unrestrictedUnidentifiedAccess: Optional[bool] = None
    capabilities: Optional[UserCapabilities] = None
    badges: Optional[List[Badge]] = None
    uuid: Optional[str] = None
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """


@dataclass
class VersionedProfileResponse:
    identityKey: Optional[IdentityKey] = None
    unidentifiedAccess: Optional[str] = None
    unrestrictedUnidentifiedAccess: Optional[bool] = None
    capabilities: Optional[UserCapabilities] = None
    badges: Optional[List[Badge]] = None
    uuid: Optional[str] = None
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """
    name: Optional[str] = None
    about: Optional[str] = None
    aboutEmoji: Optional[str] = None
    avatar: Optional[str] = None
    paymentAddress: Optional[str] = None
    phoneNumberSharing: Optional[str] = None


@dataclass
class CredentialProfileResponse:
    identityKey: Optional[IdentityKey] = None
    unidentifiedAccess: Optional[str] = None
    unrestrictedUnidentifiedAccess: Optional[bool] = None
    capabilities: Optional[UserCapabilities] = None
    badges: Optional[List[Badge]] = None
    uuid: Optional[str] = None
    """
    A service identifier is a tuple of a UUID and identity type that identifies an account and identity within the Signal service.
    """
    name: Optional[str] = None
    about: Optional[str] = None
    aboutEmoji: Optional[str] = None
    avatar: Optional[str] = None
    paymentAddress: Optional[str] = None
    phoneNumberSharing: Optional[str] = None


@dataclass
class BatchIdentityCheckResponse:
    elements: Optional[List[Element]] = None


@dataclass
class CreateProfileRequest:
    commitment: ProfileKeyCommitment
    version: str
    name: Optional[str] = None
    aboutEmoji: Optional[str] = None
    about: Optional[str] = None
    paymentAddress: Optional[str] = None
    sameAvatar: Optional[bool] = None
    phoneNumberSharing: Optional[str] = None
    avatarChange: Optional[AvatarChange] = None
    avatar: Optional[bool] = None
    badgeIds: Optional[List[str]] = None


@dataclass
class RegistrationRequest:
    accountAttributes: AccountAttributes
    skipDeviceTransfer: bool
    """
    If true, indicates that the end user has elected not to transfer data from another
    device even though a device transfer is technically possible given the capabilities of
    the calling device and the device associated with the existing account (if any). If
    false and if a device transfer is technically possible, the registration request will
    fail with an HTTP/409 response indicating that the client should prompt the user to
    transfer data from an existing device.

    """
    aciIdentityKey: IdentityKey
    pniIdentityKey: IdentityKey
    aciSignedPreKey: ECSignedPreKey
    pniSignedPreKey: ECSignedPreKey
    aciPqLastResortPreKey: KEMSignedPreKey
    pniPqLastResortPreKey: KEMSignedPreKey
    sessionId: Optional[str] = None
    """
    The ID of an existing verification session as it appears in a verification session
    metadata object. Must be provided if `recoveryPassword` is not provided; must not be
    provided if `recoveryPassword` is provided.

    """
    recoveryPassword: Optional[str] = None
    """
    A base64-encoded registration recovery password. Must be provided if `sessionId` is
    not provided; must not be provided if `sessionId` is provided

    """
    apnToken: Optional[ApnRegistrationId] = None
    gcmToken: Optional[GcmRegistrationId] = None
    valid: Optional[bool] = None


@dataclass
class AuthCheckResponseV3:
    matches: Dict[str, Result]
    """
    A dictionary with the auth check results, keyed by the token corresponding token provided in the request.

    """


@dataclass
class StickerPackFormUploadAttributes:
    manifest: Optional[StickerPackFormUploadItem] = None
    stickers: Optional[List[StickerPackFormUploadItem]] = None
    packId: Optional[str] = None


@dataclass
class BackupConfiguration:
    """
    Backup specific configuration
    """

    levels: Optional[Dict[str, BackupLevelConfiguration]] = None
    """
    A map of numeric backup level IDs to level-specific backup configuration
    """
    backupFreeTierMediaDays: Optional[int] = None
    """
    The number of days of media a free tier backup user gets
    """


@dataclass
class LevelConfiguration:
    """
    Configuration for a donation level - use to present appropriate client interfaces
    """

    name: Optional[str] = None
    """
    The localized name for the level
    """
    badge: Optional[Badge] = None


@dataclass
class AccountAndDevicesDataReport:
    account: Optional[AccountDataReport] = None
    devices: Optional[List[DeviceDataReport]] = None


@dataclass
class AccountDataReportResponse:
    reportId: Optional[str] = None
    reportTimestamp: Optional[str] = None
    data: Optional[AccountAndDevicesDataReport] = None
    text: Optional[str] = None
    """
    A plaintext representation of the data report
    """


@dataclass
class CopyMediaBatchRequest:
    items: List[CopyMediaRequest]
    """
    A list of media objects to copy from the attachments CDN to the backup CDN
    """


@dataclass
class GetSubscriptionConfigurationResponse:
    """
    Comprehensive configuration for donation subscriptions, backup subscriptions, gift subscriptions, and one-time
    donations pricing information for all levels are included in currencies. All levels that have an associated
    badge are included in levels.  All levels that correspond to a backup payment tier are included in
    backupLevels.
    """

    currencies: Optional[Dict[str, CurrencyConfiguration]] = None
    """
    A map of lower-cased ISO 3 currency codes to minimums and level-specific scalar amounts
    """
    levels: Optional[Dict[str, LevelConfiguration]] = None
    """
    A map of numeric donation level IDs to level-specific badge configuration
    """
    backup: Optional[BackupConfiguration] = None
    sepaMaximumEuros: Optional[float] = None
    """
    The maximum value of a one-time donation SEPA transaction
    """


@dataclass
class AuditorTreeHead:
    unknownFields: Optional[UnknownFieldSet] = None
    treeHead: Optional[TreeHead] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[AuditorTreeHead] = None
    parserForType: Optional[ParserAuditorTreeHead] = None
    consistencyList: Optional[List[ByteString]] = None
    consistencyCount: Optional[int] = None
    treeHeadOrBuilder: Optional[TreeHeadOrBuilder] = None
    rootValue: Optional[ByteString] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class AuditorTreeHeadOrBuilder:
    treeHead: Optional[TreeHead] = None
    consistencyList: Optional[List[ByteString]] = None
    consistencyCount: Optional[int] = None
    treeHeadOrBuilder: Optional[TreeHeadOrBuilder] = None
    rootValue: Optional[ByteString] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class Declaration:
    unknownFields: Optional[UnknownFieldSet] = None
    type: Optional[str] = None
    number: Optional[int] = None
    fullName: Optional[str] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[Declaration] = None
    parserForType: Optional[ParserDeclaration] = None
    repeated: Optional[bool] = None
    fullNameBytes: Optional[ByteString] = None
    typeBytes: Optional[ByteString] = None
    reserved: Optional[bool] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class DeclarationOrBuilder:
    type: Optional[str] = None
    number: Optional[int] = None
    fullName: Optional[str] = None
    repeated: Optional[bool] = None
    fullNameBytes: Optional[ByteString] = None
    typeBytes: Optional[ByteString] = None
    reserved: Optional[bool] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class Descriptor:
    index: Optional[int] = None
    proto: Optional[DescriptorProto] = None
    fullName: Optional[str] = None
    file: Optional[FileDescriptor] = None
    containingType: Optional[Descriptor] = None
    nestedTypes: Optional[List[Descriptor]] = None
    enumTypes: Optional[List[EnumDescriptor]] = None
    fields: Optional[List[FieldDescriptor]] = None
    extensions: Optional[List[FieldDescriptor]] = None
    oneofs: Optional[List[OneofDescriptor]] = None
    name: Optional[str] = None
    options: Optional[MessageOptions] = None
    realOneofs: Optional[List[OneofDescriptor]] = None
    extendable: Optional[bool] = None


@dataclass
class DescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    options: Optional[MessageOptions] = None
    fieldCount: Optional[int] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[DescriptorProto] = None
    parserForType: Optional[ParserDescriptorProto] = None
    reservedRangeList: Optional[List[ReservedRange]] = None
    reservedNameList: Optional[Union[List[str], ReservedNameList]] = None
    extensionRangeList: Optional[List[ExtensionRange]] = None
    oneofDeclCount: Optional[int] = None
    nestedTypeCount: Optional[int] = None
    enumTypeCount: Optional[int] = None
    extensionCount: Optional[int] = None
    extensionRangeCount: Optional[int] = None
    nameBytes: Optional[ByteString] = None
    fieldList: Optional[List[FieldDescriptorProto]] = None
    fieldOrBuilderList: Optional[List[FieldDescriptorProtoOrBuilder]] = None
    extensionList: Optional[List[FieldDescriptorProto]] = None
    extensionOrBuilderList: Optional[List[FieldDescriptorProtoOrBuilder]] = None
    nestedTypeList: Optional[List[DescriptorProto]] = None
    nestedTypeOrBuilderList: Optional[List[DescriptorProtoOrBuilder]] = None
    enumTypeList: Optional[List[EnumDescriptorProto]] = None
    enumTypeOrBuilderList: Optional[List[EnumDescriptorProtoOrBuilder]] = None
    extensionRangeOrBuilderList: Optional[List[ExtensionRangeOrBuilder]] = None
    oneofDeclList: Optional[List[OneofDescriptorProto]] = None
    oneofDeclOrBuilderList: Optional[List[OneofDescriptorProtoOrBuilder]] = None
    optionsOrBuilder: Optional[MessageOptionsOrBuilder] = None
    reservedRangeOrBuilderList: Optional[List[ReservedRangeOrBuilder]] = None
    reservedRangeCount: Optional[int] = None
    reservedNameCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class DescriptorProtoOrBuilder:
    name: Optional[str] = None
    options: Optional[MessageOptions] = None
    fieldCount: Optional[int] = None
    reservedRangeList: Optional[List[ReservedRange]] = None
    reservedNameList: Optional[List[str]] = None
    extensionRangeList: Optional[List[ExtensionRange]] = None
    oneofDeclCount: Optional[int] = None
    nestedTypeCount: Optional[int] = None
    enumTypeCount: Optional[int] = None
    extensionCount: Optional[int] = None
    extensionRangeCount: Optional[int] = None
    nameBytes: Optional[ByteString] = None
    fieldList: Optional[List[FieldDescriptorProto]] = None
    fieldOrBuilderList: Optional[List[FieldDescriptorProtoOrBuilder]] = None
    extensionList: Optional[List[FieldDescriptorProto]] = None
    extensionOrBuilderList: Optional[List[FieldDescriptorProtoOrBuilder]] = None
    nestedTypeList: Optional[List[DescriptorProto]] = None
    enumTypeList: Optional[List[EnumDescriptorProto]] = None
    enumTypeOrBuilderList: Optional[List[EnumDescriptorProtoOrBuilder]] = None
    extensionRangeOrBuilderList: Optional[List[ExtensionRangeOrBuilder]] = None
    oneofDeclList: Optional[List[OneofDescriptorProto]] = None
    oneofDeclOrBuilderList: Optional[List[OneofDescriptorProtoOrBuilder]] = None
    optionsOrBuilder: Optional[MessageOptionsOrBuilder] = None
    reservedRangeOrBuilderList: Optional[List[ReservedRangeOrBuilder]] = None
    reservedRangeCount: Optional[int] = None
    reservedNameCount: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class EditionDefault:
    unknownFields: Optional[UnknownFieldSet] = None
    value: Optional[str] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[EditionDefault] = None
    parserForType: Optional[ParserEditionDefault] = None
    edition: Optional[Edition] = None
    valueBytes: Optional[ByteString] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class EditionDefaultOrBuilder:
    value: Optional[str] = None
    edition: Optional[Edition] = None
    valueBytes: Optional[ByteString] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class EnumDescriptor:
    index: Optional[int] = None
    proto: Optional[EnumDescriptorProto] = None
    fullName: Optional[str] = None
    file: Optional[FileDescriptor] = None
    containingType: Optional[Descriptor] = None
    values: Optional[List[EnumValueDescriptor]] = None
    closed: Optional[bool] = None
    name: Optional[str] = None
    options: Optional[EnumOptions] = None


@dataclass
class EnumDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    options: Optional[EnumOptions] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[EnumDescriptorProto] = None
    parserForType: Optional[ParserEnumDescriptorProto] = None
    reservedRangeList: Optional[List[EnumReservedRange]] = None
    reservedNameList: Optional[Union[List[str], ReservedNameList]] = None
    nameBytes: Optional[ByteString] = None
    valueCount: Optional[int] = None
    optionsOrBuilder: Optional[EnumOptionsOrBuilder] = None
    reservedRangeOrBuilderList: Optional[List[EnumReservedRangeOrBuilder]] = None
    reservedRangeCount: Optional[int] = None
    reservedNameCount: Optional[int] = None
    valueList: Optional[List[EnumValueDescriptorProto]] = None
    valueOrBuilderList: Optional[List[EnumValueDescriptorProtoOrBuilder]] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class EnumDescriptorProtoOrBuilder:
    name: Optional[str] = None
    options: Optional[EnumOptions] = None
    reservedRangeList: Optional[List[EnumReservedRange]] = None
    reservedNameList: Optional[List[str]] = None
    nameBytes: Optional[ByteString] = None
    valueCount: Optional[int] = None
    optionsOrBuilder: Optional[EnumOptionsOrBuilder] = None
    reservedRangeOrBuilderList: Optional[List[EnumReservedRangeOrBuilder]] = None
    reservedRangeCount: Optional[int] = None
    reservedNameCount: Optional[int] = None
    valueList: Optional[List[EnumValueDescriptorProto]] = None
    valueOrBuilderList: Optional[List[EnumValueDescriptorProtoOrBuilder]] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class EnumOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[EnumOptions] = None
    parserForType: Optional[ParserEnumOptions] = None
    deprecatedLegacyJsonFieldConflicts: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    allowAlias: Optional[bool] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class EnumOptionsOrBuilder:
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    deprecatedLegacyJsonFieldConflicts: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    allowAlias: Optional[bool] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class EnumReservedRange:
    unknownFields: Optional[UnknownFieldSet] = None
    start: Optional[int] = None
    end: Optional[int] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[EnumReservedRange] = None
    parserForType: Optional[ParserEnumReservedRange] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class EnumReservedRangeOrBuilder:
    start: Optional[int] = None
    end: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class EnumValueDescriptor:
    index: Optional[int] = None
    proto: Optional[EnumValueDescriptorProto] = None
    fullName: Optional[str] = None
    type: Optional[EnumDescriptor] = None
    name: Optional[str] = None
    file: Optional[FileDescriptor] = None
    number: Optional[int] = None
    options: Optional[EnumValueOptions] = None


@dataclass
class EnumValueDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    number: Optional[int] = None
    options: Optional[EnumValueOptions] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[EnumValueDescriptorProto] = None
    parserForType: Optional[ParserEnumValueDescriptorProto] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[EnumValueOptionsOrBuilder] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class EnumValueDescriptorProtoOrBuilder:
    name: Optional[str] = None
    number: Optional[int] = None
    options: Optional[EnumValueOptions] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[EnumValueOptionsOrBuilder] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class EnumValueOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[EnumValueOptions] = None
    parserForType: Optional[ParserEnumValueOptions] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    debugRedact: Optional[bool] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class EnumValueOptionsOrBuilder:
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    debugRedact: Optional[bool] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class ExtensionRange:
    unknownFields: Optional[UnknownFieldSet] = None
    options: Optional[ExtensionRangeOptions] = None
    start: Optional[int] = None
    end: Optional[int] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[ExtensionRange] = None
    parserForType: Optional[ParserExtensionRange] = None
    optionsOrBuilder: Optional[ExtensionRangeOptionsOrBuilder] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class ExtensionRangeOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[ExtensionRangeOptions] = None
    parserForType: Optional[ParserExtensionRangeOptions] = None
    declarationOrBuilderList: Optional[List[DeclarationOrBuilder]] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    declarationList: Optional[List[Declaration]] = None
    declarationCount: Optional[int] = None
    verification: Optional[Verification] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class ExtensionRangeOptionsOrBuilder:
    features: Optional[FeatureSet] = None
    declarationOrBuilderList: Optional[List[DeclarationOrBuilder]] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    declarationList: Optional[List[Declaration]] = None
    declarationCount: Optional[int] = None
    verification: Optional[Verification] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class ExtensionRangeOrBuilder:
    options: Optional[ExtensionRangeOptions] = None
    start: Optional[int] = None
    end: Optional[int] = None
    optionsOrBuilder: Optional[ExtensionRangeOptionsOrBuilder] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class FeatureSet:
    unknownFields: Optional[UnknownFieldSet] = None
    enumType: Optional[EnumType] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[FeatureSet] = None
    parserForType: Optional[ParserFeatureSet] = None
    fieldPresence: Optional[FieldPresence] = None
    repeatedFieldEncoding: Optional[RepeatedFieldEncoding] = None
    messageEncoding: Optional[MessageEncoding] = None
    jsonFormat: Optional[JsonFormat] = None
    utf8Validation: Optional[Utf8Validation] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class FeatureSetOrBuilder:
    enumType: Optional[EnumType] = None
    fieldPresence: Optional[FieldPresence] = None
    repeatedFieldEncoding: Optional[RepeatedFieldEncoding] = None
    messageEncoding: Optional[MessageEncoding] = None
    jsonFormat: Optional[JsonFormat] = None
    utf8Validation: Optional[Utf8Validation] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class FieldDescriptor:
    index: Optional[int] = None
    proto: Optional[FieldDescriptorProto] = None
    fullName: Optional[str] = None
    jsonName: Optional[str] = None
    file: Optional[FileDescriptor] = None
    extensionScope: Optional[Descriptor] = None
    type: Optional[Type] = None
    containingType: Optional[Descriptor] = None
    messageType: Optional[Descriptor] = None
    containingOneof: Optional[OneofDescriptor] = None
    enumType: Optional[EnumDescriptor] = None
    defaultValue: Optional[Dict[str, Any]] = None
    name: Optional[str] = None
    number: Optional[int] = None
    options: Optional[FieldOptions] = None
    required: Optional[bool] = None
    optional: Optional[bool] = None
    packed: Optional[bool] = None
    extension: Optional[bool] = None
    repeated: Optional[bool] = None
    mapField: Optional[bool] = None
    javaType: Optional[JavaType] = None
    liteJavaType: Optional[LiteJavaType] = None
    liteType: Optional[LiteType] = None
    packable: Optional[bool] = None
    realContainingOneof: Optional[OneofDescriptor] = None


@dataclass
class FieldDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    label: Optional[Label] = None
    name: Optional[str] = None
    typeName: Optional[str] = None
    type: Optional[Type1] = None
    defaultValue: Optional[str] = None
    number: Optional[int] = None
    options: Optional[FieldOptions] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[FieldDescriptorProto] = None
    parserForType: Optional[ParserFieldDescriptorProto] = None
    proto3Optional: Optional[bool] = None
    oneofIndex: Optional[int] = None
    extendee: Optional[str] = None
    jsonName: Optional[str] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[FieldOptionsOrBuilder] = None
    typeNameBytes: Optional[ByteString] = None
    extendeeBytes: Optional[ByteString] = None
    defaultValueBytes: Optional[ByteString] = None
    jsonNameBytes: Optional[ByteString] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class FieldDescriptorProtoOrBuilder:
    label: Optional[Label] = None
    name: Optional[str] = None
    typeName: Optional[str] = None
    type: Optional[Type1] = None
    defaultValue: Optional[str] = None
    number: Optional[int] = None
    options: Optional[FieldOptions] = None
    proto3Optional: Optional[bool] = None
    oneofIndex: Optional[int] = None
    extendee: Optional[str] = None
    jsonName: Optional[str] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[FieldOptionsOrBuilder] = None
    typeNameBytes: Optional[ByteString] = None
    extendeeBytes: Optional[ByteString] = None
    defaultValueBytes: Optional[ByteString] = None
    jsonNameBytes: Optional[ByteString] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class FieldOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    retention: Optional[Retention] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[FieldOptions] = None
    parserForType: Optional[ParserFieldOptions] = None
    packed: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    editionDefaultsOrBuilderList: Optional[List[EditionDefaultOrBuilder]] = None
    ctype: Optional[Ctype] = None
    jstype: Optional[Jstype] = None
    lazy: Optional[bool] = None
    unverifiedLazy: Optional[bool] = None
    weak: Optional[bool] = None
    debugRedact: Optional[bool] = None
    targetsList: Optional[List[TargetsListEnum]] = None
    targetsCount: Optional[int] = None
    editionDefaultsList: Optional[List[EditionDefault]] = None
    editionDefaultsCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class FieldOptionsOrBuilder:
    retention: Optional[Retention] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    packed: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    editionDefaultsOrBuilderList: Optional[List[EditionDefaultOrBuilder]] = None
    ctype: Optional[Ctype] = None
    jstype: Optional[Jstype] = None
    lazy: Optional[bool] = None
    unverifiedLazy: Optional[bool] = None
    weak: Optional[bool] = None
    debugRedact: Optional[bool] = None
    targetsList: Optional[List[TargetsListEnum]] = None
    targetsCount: Optional[int] = None
    editionDefaultsList: Optional[List[EditionDefault]] = None
    editionDefaultsCount: Optional[int] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class FileDescriptor:
    proto: Optional[FileDescriptorProto] = None
    messageTypes: Optional[List[Descriptor]] = None
    enumTypes: Optional[List[EnumDescriptor]] = None
    services: Optional[List[ServiceDescriptor]] = None
    extensions: Optional[List[FieldDescriptor]] = None
    dependencies: Optional[List[FileDescriptor]] = None
    publicDependencies: Optional[List[FileDescriptor]] = None
    name: Optional[str] = None
    package: Optional[str] = None
    file: Optional[FileDescriptor] = None
    fullName: Optional[str] = None
    options: Optional[FileOptions] = None
    syntax: Optional[Syntax] = None
    edition: Optional[Edition] = None
    editionName: Optional[str] = None


@dataclass
class FileDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    package: Optional[str] = None
    options: Optional[FileOptions] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[FileDescriptorProto] = None
    parserForType: Optional[ParserFileDescriptorProto] = None
    enumTypeCount: Optional[int] = None
    extensionCount: Optional[int] = None
    syntax: Optional[str] = None
    nameBytes: Optional[ByteString] = None
    publicDependencyCount: Optional[int] = None
    dependencyCount: Optional[int] = None
    messageTypeCount: Optional[int] = None
    serviceCount: Optional[int] = None
    extensionList: Optional[List[FieldDescriptorProto]] = None
    extensionOrBuilderList: Optional[List[FieldDescriptorProtoOrBuilder]] = None
    enumTypeList: Optional[List[EnumDescriptorProto]] = None
    enumTypeOrBuilderList: Optional[List[EnumDescriptorProtoOrBuilder]] = None
    optionsOrBuilder: Optional[FileOptionsOrBuilder] = None
    edition: Optional[Edition] = None
    packageBytes: Optional[ByteString] = None
    dependencyList: Optional[Union[List[str], DependencyList]] = None
    publicDependencyList: Optional[List[int]] = None
    weakDependencyList: Optional[List[int]] = None
    weakDependencyCount: Optional[int] = None
    messageTypeList: Optional[List[DescriptorProto]] = None
    messageTypeOrBuilderList: Optional[List[DescriptorProtoOrBuilder]] = None
    serviceList: Optional[List[ServiceDescriptorProto]] = None
    serviceOrBuilderList: Optional[List[ServiceDescriptorProtoOrBuilder]] = None
    sourceCodeInfo: Optional[SourceCodeInfo] = None
    sourceCodeInfoOrBuilder: Optional[SourceCodeInfoOrBuilder] = None
    syntaxBytes: Optional[ByteString] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class FileOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[FileOptions] = None
    parserForType: Optional[ParserFileOptions] = None
    javaStringCheckUtf8: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    javaPackage: Optional[str] = None
    javaPackageBytes: Optional[ByteString] = None
    javaOuterClassname: Optional[str] = None
    javaOuterClassnameBytes: Optional[ByteString] = None
    javaMultipleFiles: Optional[bool] = None
    javaGenerateEqualsAndHash: Optional[bool] = None
    optimizeFor: Optional[OptimizeFor] = None
    goPackage: Optional[str] = None
    goPackageBytes: Optional[ByteString] = None
    ccGenericServices: Optional[bool] = None
    javaGenericServices: Optional[bool] = None
    pyGenericServices: Optional[bool] = None
    phpGenericServices: Optional[bool] = None
    ccEnableArenas: Optional[bool] = None
    objcClassPrefix: Optional[str] = None
    objcClassPrefixBytes: Optional[ByteString] = None
    csharpNamespace: Optional[str] = None
    csharpNamespaceBytes: Optional[ByteString] = None
    swiftPrefix: Optional[str] = None
    swiftPrefixBytes: Optional[ByteString] = None
    phpClassPrefix: Optional[str] = None
    phpClassPrefixBytes: Optional[ByteString] = None
    phpNamespace: Optional[str] = None
    phpNamespaceBytes: Optional[ByteString] = None
    phpMetadataNamespace: Optional[str] = None
    phpMetadataNamespaceBytes: Optional[ByteString] = None
    rubyPackage: Optional[str] = None
    rubyPackageBytes: Optional[ByteString] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class FileOptionsOrBuilder:
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    javaStringCheckUtf8: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    javaPackage: Optional[str] = None
    javaPackageBytes: Optional[ByteString] = None
    javaOuterClassname: Optional[str] = None
    javaOuterClassnameBytes: Optional[ByteString] = None
    javaMultipleFiles: Optional[bool] = None
    javaGenerateEqualsAndHash: Optional[bool] = None
    optimizeFor: Optional[OptimizeFor] = None
    goPackage: Optional[str] = None
    goPackageBytes: Optional[ByteString] = None
    ccGenericServices: Optional[bool] = None
    javaGenericServices: Optional[bool] = None
    pyGenericServices: Optional[bool] = None
    phpGenericServices: Optional[bool] = None
    ccEnableArenas: Optional[bool] = None
    objcClassPrefix: Optional[str] = None
    objcClassPrefixBytes: Optional[ByteString] = None
    csharpNamespace: Optional[str] = None
    csharpNamespaceBytes: Optional[ByteString] = None
    swiftPrefix: Optional[str] = None
    swiftPrefixBytes: Optional[ByteString] = None
    phpClassPrefix: Optional[str] = None
    phpClassPrefixBytes: Optional[ByteString] = None
    phpNamespace: Optional[str] = None
    phpNamespaceBytes: Optional[ByteString] = None
    phpMetadataNamespace: Optional[str] = None
    phpMetadataNamespaceBytes: Optional[ByteString] = None
    rubyPackage: Optional[str] = None
    rubyPackageBytes: Optional[ByteString] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class FullTreeHead:
    unknownFields: Optional[UnknownFieldSet] = None
    treeHead: Optional[TreeHead] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[FullTreeHead] = None
    parserForType: Optional[ParserFullTreeHead] = None
    auditorTreeHead: Optional[AuditorTreeHead] = None
    distinguishedList: Optional[List[ByteString]] = None
    consistencyList: Optional[List[ByteString]] = None
    distinguishedCount: Optional[int] = None
    consistencyCount: Optional[int] = None
    treeHeadOrBuilder: Optional[TreeHeadOrBuilder] = None
    auditorTreeHeadOrBuilder: Optional[AuditorTreeHeadOrBuilder] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class KeyTransparencyMonitorResponse:
    fullTreeHead: FullTreeHead
    aciMonitorProof: MonitorProof
    inclusionProof: List[str]
    """
    A list of hashes encoded in standard, unpadded base64 that prove inclusion across all monitor proofs 
    """
    e164MonitorProof: Optional[MonitorProof] = None
    usernameHashMonitorProof: Optional[MonitorProof] = None


@dataclass
class Location:
    unknownFields: Optional[UnknownFieldSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[Location] = None
    parserForType: Optional[ParserLocation] = None
    pathList: Optional[List[int]] = None
    pathCount: Optional[int] = None
    spanList: Optional[List[int]] = None
    spanCount: Optional[int] = None
    leadingComments: Optional[str] = None
    leadingCommentsBytes: Optional[ByteString] = None
    trailingComments: Optional[str] = None
    trailingCommentsBytes: Optional[ByteString] = None
    leadingDetachedCommentsList: Optional[
        Union[List[str], LeadingDetachedCommentsList]
    ] = None
    leadingDetachedCommentsCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class LocationOrBuilder:
    pathList: Optional[List[int]] = None
    pathCount: Optional[int] = None
    spanList: Optional[List[int]] = None
    spanCount: Optional[int] = None
    leadingComments: Optional[str] = None
    leadingCommentsBytes: Optional[ByteString] = None
    trailingComments: Optional[str] = None
    trailingCommentsBytes: Optional[ByteString] = None
    leadingDetachedCommentsList: Optional[List[str]] = None
    leadingDetachedCommentsCount: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class Message:
    parserForType: Optional[ParserMessage] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[MessageLite] = None
    initialized: Optional[bool] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None


@dataclass
class MessageOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[MessageOptions] = None
    parserForType: Optional[ParserMessageOptions] = None
    mapEntry: Optional[bool] = None
    messageSetWireFormat: Optional[bool] = None
    noStandardDescriptorAccessor: Optional[bool] = None
    deprecatedLegacyJsonFieldConflicts: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class MessageOptionsOrBuilder:
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    mapEntry: Optional[bool] = None
    messageSetWireFormat: Optional[bool] = None
    noStandardDescriptorAccessor: Optional[bool] = None
    deprecatedLegacyJsonFieldConflicts: Optional[bool] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class MethodDescriptor:
    index: Optional[int] = None
    proto: Optional[MethodDescriptorProto] = None
    fullName: Optional[str] = None
    file: Optional[FileDescriptor] = None
    service: Optional[ServiceDescriptor] = None
    inputType: Optional[Descriptor] = None
    outputType: Optional[Descriptor] = None
    name: Optional[str] = None
    options: Optional[MethodOptions] = None
    clientStreaming: Optional[bool] = None
    serverStreaming: Optional[bool] = None


@dataclass
class MethodDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    options: Optional[MethodOptions] = None
    inputType: Optional[str] = None
    outputType: Optional[str] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[MethodDescriptorProto] = None
    parserForType: Optional[ParserMethodDescriptorProto] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[MethodOptionsOrBuilder] = None
    inputTypeBytes: Optional[ByteString] = None
    outputTypeBytes: Optional[ByteString] = None
    clientStreaming: Optional[bool] = None
    serverStreaming: Optional[bool] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class MethodDescriptorProtoOrBuilder:
    name: Optional[str] = None
    options: Optional[MethodOptions] = None
    inputType: Optional[str] = None
    outputType: Optional[str] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[MethodOptionsOrBuilder] = None
    inputTypeBytes: Optional[ByteString] = None
    outputTypeBytes: Optional[ByteString] = None
    clientStreaming: Optional[bool] = None
    serverStreaming: Optional[bool] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class MethodOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[MethodOptions] = None
    parserForType: Optional[ParserMethodOptions] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    idempotencyLevel: Optional[IdempotencyLevel] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class MethodOptionsOrBuilder:
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    idempotencyLevel: Optional[IdempotencyLevel] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class MonitorProof:
    """
    The monitor proof for the username hash search key
    """

    unknownFields: Optional[UnknownFieldSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[MonitorProof] = None
    parserForType: Optional[ParserMonitorProof] = None
    stepsList: Optional[List[ProofStep]] = None
    stepsCount: Optional[int] = None
    stepsOrBuilderList: Optional[List[ProofStepOrBuilder]] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class NamePart:
    unknownFields: Optional[UnknownFieldSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[NamePart] = None
    parserForType: Optional[ParserNamePart] = None
    namePart: Optional[str] = None
    namePartBytes: Optional[ByteString] = None
    isExtension: Optional[bool] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class NamePartOrBuilder:
    namePart: Optional[str] = None
    namePartBytes: Optional[ByteString] = None
    isExtension: Optional[bool] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class OneofDescriptor:
    index: Optional[int] = None
    proto: Optional[OneofDescriptorProto] = None
    fullName: Optional[str] = None
    file: Optional[FileDescriptor] = None
    containingType: Optional[Descriptor] = None
    fieldCount: Optional[int] = None
    name: Optional[str] = None
    synthetic: Optional[bool] = None
    options: Optional[OneofOptions] = None


@dataclass
class OneofDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    options: Optional[OneofOptions] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[OneofDescriptorProto] = None
    parserForType: Optional[ParserOneofDescriptorProto] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[OneofOptionsOrBuilder] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class OneofDescriptorProtoOrBuilder:
    name: Optional[str] = None
    options: Optional[OneofOptions] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[OneofOptionsOrBuilder] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class OneofOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[OneofOptions] = None
    parserForType: Optional[ParserOneofOptions] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class OneofOptionsOrBuilder:
    features: Optional[FeatureSet] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class PrefixSearchResult:
    unknownFields: Optional[UnknownFieldSet] = None
    counter: Optional[int] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[PrefixSearchResult] = None
    parserForType: Optional[ParserPrefixSearchResult] = None
    proofList: Optional[List[ByteString]] = None
    proofCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class PrefixSearchResultOrBuilder:
    counter: Optional[int] = None
    proofList: Optional[List[ByteString]] = None
    proofCount: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class ProofStep:
    unknownFields: Optional[UnknownFieldSet] = None
    prefix: Optional[PrefixSearchResult] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[ProofStep] = None
    parserForType: Optional[ParserProofStep] = None
    commitment: Optional[ByteString] = None
    prefixOrBuilder: Optional[PrefixSearchResultOrBuilder] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class ProofStepOrBuilder:
    prefix: Optional[PrefixSearchResult] = None
    commitment: Optional[ByteString] = None
    prefixOrBuilder: Optional[PrefixSearchResultOrBuilder] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class ReservedRange:
    unknownFields: Optional[UnknownFieldSet] = None
    start: Optional[int] = None
    end: Optional[int] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[ReservedRange] = None
    parserForType: Optional[ParserReservedRange] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class ReservedRangeOrBuilder:
    start: Optional[int] = None
    end: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class ServiceDescriptor:
    index: Optional[int] = None
    proto: Optional[ServiceDescriptorProto] = None
    fullName: Optional[str] = None
    file: Optional[FileDescriptor] = None
    methods: Optional[List[MethodDescriptor]] = None
    name: Optional[str] = None
    options: Optional[ServiceOptions] = None


@dataclass
class ServiceDescriptorProto:
    unknownFields: Optional[UnknownFieldSet] = None
    name: Optional[str] = None
    options: Optional[ServiceOptions] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[ServiceDescriptorProto] = None
    parserForType: Optional[ParserServiceDescriptorProto] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[ServiceOptionsOrBuilder] = None
    methodCount: Optional[int] = None
    methodList: Optional[List[MethodDescriptorProto]] = None
    methodOrBuilderList: Optional[List[MethodDescriptorProtoOrBuilder]] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class ServiceDescriptorProtoOrBuilder:
    name: Optional[str] = None
    options: Optional[ServiceOptions] = None
    nameBytes: Optional[ByteString] = None
    optionsOrBuilder: Optional[ServiceOptionsOrBuilder] = None
    methodCount: Optional[int] = None
    methodList: Optional[List[MethodDescriptorProto]] = None
    methodOrBuilderList: Optional[List[MethodDescriptorProtoOrBuilder]] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class ServiceOptions:
    unknownFields: Optional[UnknownFieldSet] = None
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[ServiceOptions] = None
    parserForType: Optional[ParserServiceOptions] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    allFieldsRaw: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class ServiceOptionsOrBuilder:
    deprecated: Optional[bool] = None
    features: Optional[FeatureSet] = None
    featuresOrBuilder: Optional[FeatureSetOrBuilder] = None
    uninterpretedOptionList: Optional[List[UninterpretedOption]] = None
    uninterpretedOptionOrBuilderList: Optional[List[UninterpretedOptionOrBuilder]] = (
        None
    )
    uninterpretedOptionCount: Optional[int] = None
    defaultInstanceForType: Optional[Message] = None
    unknownFields: Optional[UnknownFieldSet] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class SourceCodeInfo:
    unknownFields: Optional[UnknownFieldSet] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[SourceCodeInfo] = None
    parserForType: Optional[ParserSourceCodeInfo] = None
    locationList: Optional[List[Location]] = None
    locationCount: Optional[int] = None
    locationOrBuilderList: Optional[List[LocationOrBuilder]] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class SourceCodeInfoOrBuilder:
    locationList: Optional[List[Location]] = None
    locationCount: Optional[int] = None
    locationOrBuilderList: Optional[List[LocationOrBuilder]] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class TreeHead:
    unknownFields: Optional[UnknownFieldSet] = None
    signature: Optional[ByteString] = None
    timestamp: Optional[int] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[TreeHead] = None
    parserForType: Optional[ParserTreeHead] = None
    treeSize: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class TreeHeadOrBuilder:
    signature: Optional[ByteString] = None
    timestamp: Optional[int] = None
    treeSize: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class UninterpretedOption:
    unknownFields: Optional[UnknownFieldSet] = None
    nameCount: Optional[int] = None
    doubleValue: Optional[float] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[UninterpretedOption] = None
    parserForType: Optional[ParserUninterpretedOption] = None
    nameList: Optional[List[NamePart]] = None
    nameOrBuilderList: Optional[List[NamePartOrBuilder]] = None
    identifierValue: Optional[str] = None
    identifierValueBytes: Optional[ByteString] = None
    positiveIntValue: Optional[int] = None
    negativeIntValue: Optional[int] = None
    stringValue: Optional[ByteString] = None
    aggregateValue: Optional[str] = None
    aggregateValueBytes: Optional[ByteString] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class UninterpretedOptionOrBuilder:
    nameCount: Optional[int] = None
    doubleValue: Optional[float] = None
    nameList: Optional[List[NamePart]] = None
    nameOrBuilderList: Optional[List[NamePartOrBuilder]] = None
    identifierValue: Optional[str] = None
    identifierValueBytes: Optional[ByteString] = None
    positiveIntValue: Optional[int] = None
    negativeIntValue: Optional[int] = None
    stringValue: Optional[ByteString] = None
    aggregateValue: Optional[str] = None
    aggregateValueBytes: Optional[ByteString] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class FullTreeHeadOrBuilder:
    treeHead: Optional[TreeHead] = None
    auditorTreeHead: Optional[AuditorTreeHead] = None
    distinguishedList: Optional[List[ByteString]] = None
    consistencyList: Optional[List[ByteString]] = None
    distinguishedCount: Optional[int] = None
    consistencyCount: Optional[int] = None
    treeHeadOrBuilder: Optional[TreeHeadOrBuilder] = None
    auditorTreeHeadOrBuilder: Optional[AuditorTreeHeadOrBuilder] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class KeyTransparencySearchResponse:
    aciSearchResponse: SearchResponse
    e164SearchResponse: Optional[SearchResponse] = None
    usernameHashSearchResponse: Optional[SearchResponse] = None


@dataclass
class SearchProof:
    unknownFields: Optional[UnknownFieldSet] = None
    pos: Optional[int] = None
    inclusionList: Optional[List[ByteString]] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[SearchProof] = None
    parserForType: Optional[ParserSearchProof] = None
    stepsList: Optional[List[ProofStep]] = None
    stepsCount: Optional[int] = None
    stepsOrBuilderList: Optional[List[ProofStepOrBuilder]] = None
    inclusionCount: Optional[int] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class SearchProofOrBuilder:
    pos: Optional[int] = None
    inclusionList: Optional[List[ByteString]] = None
    stepsList: Optional[List[ProofStep]] = None
    stepsCount: Optional[int] = None
    stepsOrBuilderList: Optional[List[ProofStepOrBuilder]] = None
    inclusionCount: Optional[int] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None


@dataclass
class SearchResponse:
    """
    The search response for the username hash search key
    """

    unknownFields: Optional[UnknownFieldSet] = None
    value: Optional[UpdateValue] = None
    treeHead: Optional[FullTreeHead] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[SearchResponse] = None
    parserForType: Optional[ParserSearchResponse] = None
    treeHeadOrBuilder: Optional[FullTreeHeadOrBuilder] = None
    valueOrBuilder: Optional[UpdateValueOrBuilder] = None
    search: Optional[SearchProof] = None
    vrfProof: Optional[ByteString] = None
    opening: Optional[ByteString] = None
    searchOrBuilder: Optional[SearchProofOrBuilder] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class UpdateValue:
    unknownFields: Optional[UnknownFieldSet] = None
    value: Optional[ByteString] = None
    serializedSize: Optional[int] = None
    defaultInstanceForType: Optional[UpdateValue] = None
    parserForType: Optional[ParserUpdateValue] = None
    initialized: Optional[bool] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    memoizedSerializedSize: Optional[int] = None


@dataclass
class UpdateValueOrBuilder:
    value: Optional[ByteString] = None
    unknownFields: Optional[UnknownFieldSet] = None
    defaultInstanceForType: Optional[Message] = None
    initializationErrorString: Optional[str] = None
    descriptorForType: Optional[Descriptor] = None
    allFields: Optional[Dict[str, Dict[str, Any]]] = None
    initialized: Optional[bool] = None
